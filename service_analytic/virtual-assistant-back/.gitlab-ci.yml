stages:
  - deploy

.before_script_prepare_env: &before_script_prepare_env
  - mkdir docker
  - cp -rf env-ci/docker/base/* docker/
  - cp -rf env-ci/docker/$ENV_NAME/* docker/ || true
  - cp -f env-ci/docker/yml/docker-compose.$ENV_NAME.yml docker-compose.yml
  - ln -s ../parser . || true

  - cp -f env-ci/env/.env-$ENV_NAME .env

  - sed -i s/^APP_KEY=$/APP_KEY=$APP_KEY/ .env
  - sed -i s/^CHECK_ADVERTISING_TOKEN=$/CHECK_ADVERTISING_TOKEN=$CHECK_ADVERTISING_TOKEN/ .env
  - sed -i s/^DB_PASSWORD=$/DB_PASSWORD=$DB_PASSWORD/ .env
  - sed -i s/^EVENT_MASTER_TOKEN=$/EVENT_MASTER_TOKEN=$EVENT_MASTER_TOKEN/ .env
  - sed -i s/^FTP_PASSWORD=$/FTP_PASSWORD=$FTP_PASSWORD/ .env
  - sed -i s/^FTP_USERNAME=$/FTP_USERNAME=$FTP_USERNAME/ .env
  - sed -i s/^GOD_USER_NAME=$/GOD_USER_NAME=$GOD_USER_NAME/ .env
  - sed -i s/^GOD_USER_PASSWORD=$/GOD_USER_PASSWORD=$GOD_USER_PASSWORD/ .env
  - sed -i s/^JWT_SECRET=$/JWT_SECRET=$JWT_SECRET/ .env
  - sed -i s/^MAIL_PASSWORD=$/MAIL_PASSWORD=$MAIL_PASSWORD/ .env
  - sed -i s/^MPSTATS_TOKEN=$/MPSTATS_TOKEN=$MPSTATS_TOKEN/ .env
  - sed -i s/^OZON_COMMAND_API_KEY=$/OZON_COMMAND_API_KEY=$OZON_COMMAND_API_KEY/ .env
  - sed -i s/^OZON_COMMAND_CLIEND_ID=$/OZON_COMMAND_CLIEND_ID=$OZON_COMMAND_CLIEND_ID/ .env
  - sed -i s/^REDIS_PASSWORD=$/REDIS_PASSWORD=$REDIS_PASSWORD/ .env
  - sed -i s/^WEB_APP_TOKEN=$/WEB_APP_TOKEN=$WEB_APP_TOKEN/ .env
  - sed -i s/^WILDBERRIES_API_TOKEN=$/WILDBERRIES_API_TOKEN=$WILDBERRIES_API_TOKEN/ .env
  - sed -i s/^WILDBERRIES_CLIENT_ID=$/WILDBERRIES_CLIENT_ID=$WILDBERRIES_CLIENT_ID/ .env
  - sed -i s/^FTP_VA_PASSWORD=$/FTP_VA_PASSWORD=$FTP_VA_PASSWORD/ .env
  - sed -i s/^FTP_VA_USERNAME=$/FTP_VA_USERNAME=$FTP_VA_USERNAME/ .env
  - sed -i s/^RABBITMQ_PARSER_USER=$/RABBITMQ_PARSER_USER=$RABBITMQ_PARSER_USER/ .env
  - sed -i s/^RABBITMQ_PARSER_PASSWORD=$/RABBITMQ_PARSER_PASSWORD=$RABBITMQ_PARSER_PASSWORD/ .env
  - sed -i s/^IREG_API_KEY=$/IREG_API_KEY=$IREG_API_KEY/ .env
  - sed -i s/^ANALYTICS_API_TOKEN=$/ANALYTICS_API_TOKEN=$ANALYTICS_API_TOKEN/ .env
  - sed -i s/^SENTRY_LARAVEL_DSN=$/SENTRY_LARAVEL_DSN=$SENTRY_LARAVEL_DSN/ .env

deploy-dev:
  stage: deploy
  environment: develop
  tags:
    - dev
  only:
    - develop
  variables:
    ENV_NAME: dev
    ENV_SUFFIX: _DEV
    APP_KEY: $APP_KEY_DEV
    CHECK_ADVERTISING_TOKEN: $CHECK_ADVERTISING_TOKEN_DEV
    DB_PASSWORD: $DB_PASSWORD_DEV
    EVENT_MASTER_TOKEN: $EVENT_MASTER_TOKEN_DEV
    FTP_PASSWORD: $FTP_PASSWORD_DEV
    FTP_USERNAME: $FTP_USERNAME_DEV
    GOD_USER_NAME: $GOD_USER_NAME_DEV
    GOD_USER_PASSWORD: $GOD_USER_PASSWORD_DEV
    JWT_SECRET: $JWT_SECRET_DEV
    MAIL_PASSWORD: $MAIL_PASSWORD_DEV
    MPSTATS_TOKEN: $MPSTATS_TOKEN_DEV
    OZON_COMMAND_API_KEY: $OZON_COMMAND_API_KEY_DEV
    OZON_COMMAND_CLIEND_ID: $OZON_COMMAND_CLIEND_ID_DEV
    REDIS_PASSWORD: $REDIS_PASSWORD_DEV
    WEB_APP_TOKEN: $WEB_APP_TOKEN_DEV
    WILDBERRIES_API_TOKEN: $WILDBERRIES_API_TOKEN_DEV
    WILDBERRIES_CLIENT_ID: $WILDBERRIES_CLIENT_ID_DEV
    FTP_VA_USERNAME: $FTP_VA_USERNAME_DEV
    FTP_VA_PASSWORD: $FTP_VA_PASSWORD_DEV
    RABBITMQ_PARSER_USER: $RABBITMQ_PARSER_USER_DEV
    RABBITMQ_PARSER_PASSWORD: $RABBITMQ_PARSER_PASSWORD_DEV
    IREG_API_KEY: $IREG_API_KEY_DEV
    ANALYTICS_API_TOKEN: $ANALYTICS_API_TOKEN_DEV
    SENTRY_LARAVEL_DSN: $SENTRY_LARAVEL_DSN_DEV

    DEPLOY_PATH: "/var/www/containers/virtual-assistant-back"

  before_script:
    - *before_script_prepare_env

  script:
    #build
    - composer --no-interaction --no-progress install
    - cp -r env-ci/vendor-fix/* vendor
    - docker-compose build

    #deploy
    - sudo rsync -rlog --delete --exclude=/.data --exclude=/env-ci --exclude=/.git --usermap=*:1000 --groupmap=*:1000 ./ $DEPLOY_PATH/
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml up -d
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va ./clear_cache.sh
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart octane-va
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan migrate --force
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -u 0 -T octane-va service cron start
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan horizon:publish
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T queue-va php artisan horizon:terminate
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart queue-va

deploy-test:
  stage: deploy
  environment: testing
  tags:
    - test
  only:
    - test
  variables:
    ENV_NAME: test
    ENV_SUFFIX: _TEST
    APP_KEY: $APP_KEY_TEST
    CHECK_ADVERTISING_TOKEN: $CHECK_ADVERTISING_TOKEN_TEST
    DB_PASSWORD: $DB_PASSWORD_TEST
    EVENT_MASTER_TOKEN: $EVENT_MASTER_TOKEN_TEST
    FTP_PASSWORD: $FTP_PASSWORD_TEST
    FTP_USERNAME: $FTP_USERNAME_TEST
    GOD_USER_NAME: $GOD_USER_NAME_TEST
    GOD_USER_PASSWORD: $GOD_USER_PASSWORD_TEST
    JWT_SECRET: $JWT_SECRET_TEST
    MAIL_PASSWORD: $MAIL_PASSWORD_TEST
    MPSTATS_TOKEN: $MPSTATS_TOKEN_TEST
    OZON_COMMAND_API_KEY: $OZON_COMMAND_API_KEY_TEST
    OZON_COMMAND_CLIEND_ID: $OZON_COMMAND_CLIEND_ID_TEST
    REDIS_PASSWORD: $REDIS_PASSWORD_TEST
    WEB_APP_TOKEN: $WEB_APP_TOKEN_TEST
    WILDBERRIES_API_TOKEN: $WILDBERRIES_API_TOKEN_TEST
    WILDBERRIES_CLIENT_ID: $WILDBERRIES_CLIENT_ID_TEST
    FTP_VA_USERNAME: $FTP_VA_USERNAME_TEST
    FTP_VA_PASSWORD: $FTP_VA_PASSWORD_TEST
    RABBITMQ_PARSER_USER: $RABBITMQ_PARSER_USER_TEST
    RABBITMQ_PARSER_PASSWORD: $RABBITMQ_PARSER_PASSWORD_TEST
    IREG_API_KEY: $IREG_API_KEY_TEST
    ANALYTICS_API_TOKEN: $ANALYTICS_API_TOKEN_TEST
    SENTRY_LARAVEL_DSN: $SENTRY_LARAVEL_DSN_TEST

    DEPLOY_PATH: "/var/www/containers/virtual-assistant-back"

  before_script:
    - *before_script_prepare_env

  script:
    # build
    - composer --no-interaction --no-progress install
    - cp -r env-ci/vendor-fix/* vendor
    - docker-compose build

    #deploy
    - sudo rsync -rlog --delete --exclude=/.data --exclude=/env-ci --exclude=/.git --usermap=*:1000 --groupmap=*:1000 ./ $DEPLOY_PATH/
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml up -d
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va ./clear_cache.sh
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart octane-va
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -u 0 -T octane-va service cron start
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan migrate --force
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan horizon:publish
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T queue-va php artisan horizon:terminate
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart queue-va

deploy-prod:
  stage: deploy
  environment: production
  tags:
    - prod
  only:
    - master
  variables:
    ENV_NAME: prod
    ENV_SUFFIX: _PROD
    APP_KEY: $APP_KEY_PROD
    CHECK_ADVERTISING_TOKEN: $CHECK_ADVERTISING_TOKEN_PROD
    DB_PASSWORD: $DB_PASSWORD_PROD
    EVENT_MASTER_TOKEN: $EVENT_MASTER_TOKEN_PROD
    FTP_PASSWORD: $FTP_PASSWORD_PROD
    FTP_USERNAME: $FTP_USERNAME_PROD
    GOD_USER_NAME: $GOD_USER_NAME_PROD
    GOD_USER_PASSWORD: $GOD_USER_PASSWORD_PROD
    JWT_SECRET: $JWT_SECRET_PROD
    MAIL_PASSWORD: $MAIL_PASSWORD_PROD
    MPSTATS_TOKEN: $MPSTATS_TOKEN_PROD
    OZON_COMMAND_API_KEY: $OZON_COMMAND_API_KEY_PROD
    OZON_COMMAND_CLIEND_ID: $OZON_COMMAND_CLIEND_ID_PROD
    REDIS_PASSWORD: $REDIS_PASSWORD_PROD
    WEB_APP_TOKEN: $WEB_APP_TOKEN_PROD
    WILDBERRIES_API_TOKEN: $WILDBERRIES_API_TOKEN_PROD
    WILDBERRIES_CLIENT_ID: $WILDBERRIES_CLIENT_ID_PROD
    FTP_VA_USERNAME: $FTP_VA_USERNAME_PROD
    FTP_VA_PASSWORD: $FTP_VA_PASSWORD_PROD
    RABBITMQ_PARSER_USER: $RABBITMQ_PARSER_USER_PROD
    RABBITMQ_PARSER_PASSWORD: $RABBITMQ_PARSER_PASSWORD_PROD
    IREG_API_KEY: $IREG_API_KEY_PROD
    ANALYTICS_API_TOKEN: $ANALYTICS_API_TOKEN_PROD
    SENTRY_LARAVEL_DSN: $SENTRY_LARAVEL_DSN_PROD

    DEPLOY_PATH: "/var/www/containers/virtual-assistant-back"

  before_script:
    - *before_script_prepare_env

  script:
    # build
    - composer --no-interaction --no-progress install
    - docker-compose build

    #deploy
    - sudo rsync -rlog --delete --exclude=/.data --exclude=/env-ci --exclude=/.git --usermap=*:1000 --groupmap=*:1000 ./ $DEPLOY_PATH/
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml up -d
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va ./clear_cache.sh
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart octane-va
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -u 0 -T octane-va service cron start
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan migrate --force
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan horizon:publish
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T queue-va php artisan horizon:terminate
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart queue-va


deploy-demo:
  stage: deploy
  environment: demo
  tags:
    - demo
  only:
    - demo
  variables:
    ENV_NAME: demo
    ENV_SUFFIX: _DEMO
    APP_KEY: $APP_KEY_DEMO
    CHECK_ADVERTISING_TOKEN: $CHECK_ADVERTISING_TOKEN_DEMO
    DB_PASSWORD: $DB_PASSWORD_DEMO
    EVENT_MASTER_TOKEN: $EVENT_MASTER_TOKEN_DEMO
    FTP_PASSWORD: $FTP_PASSWORD_DEMO
    FTP_USERNAME: $FTP_USERNAME_DEMO
    GOD_USER_NAME: $GOD_USER_NAME_DEMO
    GOD_USER_PASSWORD: $GOD_USER_PASSWORD_DEMO
    JWT_SECRET: $JWT_SECRET_DEMO
    MAIL_PASSWORD: $MAIL_PASSWORD_DEMO
    MPSTATS_TOKEN: $MPSTATS_TOKEN_DEMO
    OZON_COMMAND_API_KEY: $OZON_COMMAND_API_KEY_DEMO
    OZON_COMMAND_CLIEND_ID: $OZON_COMMAND_CLIEND_ID_DEMO
    REDIS_PASSWORD: $REDIS_PASSWORD_DEMO
    WEB_APP_TOKEN: $WEB_APP_TOKEN_DEMO
    WILDBERRIES_API_TOKEN: $WILDBERRIES_API_TOKEN_DEMO
    WILDBERRIES_CLIENT_ID: $WILDBERRIES_CLIENT_ID_DEMO
    FTP_VA_USERNAME: $FTP_VA_USERNAME_DEMO
    FTP_VA_PASSWORD: $FTP_VA_PASSWORD_DEMO
    RABBITMQ_PARSER_USER: $RABBITMQ_PARSER_USER_DEMO
    RABBITMQ_PARSER_PASSWORD: $RABBITMQ_PARSER_PASSWORD_DEMO
    IREG_API_KEY: $IREG_API_KEY_DEMO
    ANALYTICS_API_TOKEN: $ANALYTICS_API_TOKEN_DEMO
    SENTRY_LARAVEL_DSN: $SENTRY_LARAVEL_DSN_DEMO

    DEPLOY_PATH: "/var/www/containers/virtual-assistant-back"

  before_script:
    - *before_script_prepare_env

  script:
    # build
    - composer --no-interaction --no-progress install
    - docker-compose build

    #deploy
    - sudo rsync -rlog --delete --exclude=/.data --exclude=/env-ci --exclude=/.git --usermap=*:1000 --groupmap=*:1000 ./ $DEPLOY_PATH/
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml up -d
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va ./clear_cache.sh
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart octane-va
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -u 0 -T octane-va service cron start
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan migrate --force
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T octane-va php artisan horizon:publish
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml exec -T queue-va php artisan horizon:terminate
    - docker-compose -f $DEPLOY_PATH/docker-compose.yml restart queue-va
